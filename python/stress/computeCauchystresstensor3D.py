# Autogenerated with SMOP 
from smop.core import *
# 

    
@function
def computeCauchystresstensor3D(t=None,dt=None,N=None,lattice=None,oldpos=None,sqrtg=None,Vref=None,elasticparam=None,ksthandle=None,kshhandle=None,kbehandle=None,structuralneighbours=None,shearneighbours=None,bendneighbours=None,*args,**kwargs):
    varargin = computeCauchystresstensor3D.varargin
    nargin = computeCauchystresstensor3D.nargin

    ##
#        Project: Fluid - structure interaction on deformable surfaces
#         Author: Luca Di Stasio
#    Institution: ETH Zrich
#                 Institute for Building Materials
# Research group: Computational Physics for Engineering Materials
#        Version: 0.1
#  Creation date: July 31st, 2014
#    Last update: July 31st, 2014
    
    #    Description: 
#          Input: 
#         Output:
    
    ##
    
    oldFel=evaluateelasticforces3D(t - dt,N,cat(lattice[:,1:6],oldpos),elasticparam,ksthandle,kshhandle,kbehandle,structuralneighbours,shearneighbours,bendneighbours)
    Fel=evaluateelasticforces3D(t,N,lattice,elasticparam,ksthandle,kshhandle,kbehandle,structuralneighbours,shearneighbours,bendneighbours)
    u=lattice[:,7:9] - oldpos
    sigma=multiply(0.5,cat(multiply((oldFel[:,1] + Fel[:,1]),u[:,1]),multiply((oldFel[:,1] + Fel[:,1]),u[:,2]),multiply((oldFel[:,1] + Fel[:,1]),u[:,3]),multiply((oldFel[:,2] + Fel[:,2]),u[:,1]),multiply((oldFel[:,2] + Fel[:,2]),u[:,2]),multiply((oldFel[:,2] + Fel[:,2]),u[:,3]),multiply((oldFel[:,3] + Fel[:,3]),u[:,1]),multiply((oldFel[:,3] + Fel[:,3]),u[:,2]),multiply((oldFel[:,3] + Fel[:,3]),u[:,3]))) / cat((multiply(sqrtg,Vref)),(multiply(sqrtg,Vref)),(multiply(sqrtg,Vref)),(multiply(sqrtg,Vref)),(multiply(sqrtg,Vref)),(multiply(sqrtg,Vref)),(multiply(sqrtg,Vref)),(multiply(sqrtg,Vref)),(multiply(sqrtg,Vref)))
    return sigma