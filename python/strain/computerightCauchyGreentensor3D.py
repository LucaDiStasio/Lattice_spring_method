# Autogenerated with SMOP 
from smop.core import *
# 

    
@function
def computerightCauchyGreentensor3D(F=None,*args,**kwargs):
    varargin = computerightCauchyGreentensor3D.varargin
    nargin = computerightCauchyGreentensor3D.nargin

    ##
#        Project: Fluid - structure interaction on deformable surfaces
#         Author: Luca Di Stasio
#    Institution: ETH Zrich
#                 Institute for Building Materials
# Research group: Computational Physics for Engineering Materials
#        Version: 0.1
#  Creation date: July 30th, 2014
#    Last update: July 31st, 2014
    
    #    Description: 
#          Input: 
#         Output:
    
    ##
    
    C=matlabarray(cat(multiply(F[:,1],F[:,1]) + multiply(F[:,4],F[:,4]) + multiply(F[:,7],F[:,7]),multiply(F[:,1],F[:,2]) + multiply(F[:,4],F[:,5]) + multiply(F[:,7],F[:,8]),multiply(F[:,1],F[:,3]) + multiply(F[:,4],F[:,6]) + multiply(F[:,7],F[:,9]),multiply(F[:,2],F[:,1]) + multiply(F[:,5],F[:,4]) + multiply(F[:,8],F[:,7]),multiply(F[:,2],F[:,2]) + multiply(F[:,5],F[:,5]) + multiply(F[:,8],F[:,8]),multiply(F[:,2],F[:,3]) + multiply(F[:,5],F[:,6]) + multiply(F[:,8],F[:,9]),multiply(F[:,3],F[:,1]) + multiply(F[:,6],F[:,4]) + multiply(F[:,9],F[:,7]),multiply(F[:,3],F[:,2]) + multiply(F[:,6],F[:,5]) + multiply(F[:,9],F[:,8]),multiply(F[:,3],F[:,3]) + multiply(F[:,6],F[:,6]) + multiply(F[:,9],F[:,9])))
    return C