# Autogenerated with SMOP 
from smop.core import *
# 

    
@function
def computedeformationgradient3D(N=None,lattice=None,deltaq=None,firstdevneighbours=None,*args,**kwargs):
    varargin = computedeformationgradient3D.varargin
    nargin = computedeformationgradient3D.nargin

    ##
#        Project: Fluid - structure interaction on deformable surfaces
#         Author: Luca Di Stasio
#    Institution: ETH Zrich
#                 Institute for Building Materials
# Research group: Computational Physics for Engineering Materials
#        Version: 0.1
#  Creation date: July 30th, 2014
#    Last update: July 31st, 2014
    
    #    Description: 
#          Input: 
#         Output:
    
    ##
    
    undeformedcovariantbase=computecovariantbase3D(N,deltaq,cat(lattice[:,1:6],lattice[:,4:6]),firstdevneighbours)
    __,__,undeformedsqrtg=computemetriccoefficients3D(undeformedcovariantbase,nargout=3)
    undeformedcontravariantbase=computecontravariantbase3D(undeformedcovariantbase,undeformedsqrtg)
    clear('undeformedcovariantbase','undeformedsqrtg')
    deformedcovariantbase=computecovariantbase3D(N,deltaq,lattice,firstdevneighbours)
    G1=undeformedcontravariantbase[:,1:3]
    G2=undeformedcontravariantbase[:,4:6]
    G3=undeformedcontravariantbase[:,7:9]
    g1=deformedcovariantbase[:,1:3]
    g2=deformedcovariantbase[:,4:6]
    g3=deformedcovariantbase[:,7:9]
    clear('undeformedcontravariantbase','deformedcovariantbase')
    F=cat(multiply(g1[:,1],G1[:,1]),multiply(g1[:,1],G1[:,2]),multiply(g1[:,1],G1[:,3]),multiply(g1[:,2],G1[:,1]),multiply(g1[:,2],G1[:,2]),multiply(g1[:,2],G1[:,3]),multiply(g1[:,3],G1[:,1]),multiply(g1[:,3],G1[:,2]),multiply(g1[:,3],G1[:,3])) + cat(multiply(g2[:,1],G2[:,1]),multiply(g2[:,1],G2[:,2]),multiply(g2[:,1],G2[:,3]),multiply(g2[:,2],G2[:,1]),multiply(g2[:,2],G2[:,2]),multiply(g2[:,2],G2[:,3]),multiply(g2[:,3],G2[:,1]),multiply(g2[:,3],G2[:,2]),multiply(g2[:,3],G2[:,3])) + cat(multiply(g3[:,1],G3[:,1]),multiply(g3[:,1],G3[:,2]),multiply(g3[:,1],G3[:,3]),multiply(g3[:,2],G3[:,1]),multiply(g3[:,2],G3[:,2]),multiply(g3[:,2],G3[:,3]),multiply(g3[:,3],G3[:,1]),multiply(g3[:,3],G3[:,2]),multiply(g3[:,3],G3[:,3]))
    return F