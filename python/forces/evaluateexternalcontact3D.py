# Autogenerated with SMOP 
from smop.core import *
# 

    
@function
def evaluateexternalcontact3D(t=None,N=None,lattice=None,boundary=None,boundhandle=None,gradienthandle=None,kec=None,*args,**kwargs):
    varargin = evaluateexternalcontact3D.varargin
    nargin = evaluateexternalcontact3D.nargin

    ##
#        Project: Fluid - structure interaction on deformable surfaces
#         Author: Luca Di Stasio
#    Institution: ETH Zrich
#                 Institute for Building Materials
# Research group: Computational Physics for Engineering Materials
#        Version: 0.1
#  Creation date: July 28th, 2014
#    Last update: July 29th, 2014
    
    #    Description: F(r,t) <= 0 solid obstacle
#          Input: 
#         Output:
    
    ##
    
    boundindices=find(boundhandle[lattice[boundary,7:9],t] <= 0)
    if logical_not(isempty(boundindices)):
        F=sparse((arange(1,dot(3,N))).T,ones(dot(3,N),1),zeros(dot(3,N),1),dot(3,N),1)
        for i in arange(1,length(boundindices)).reshape(-1):
            Fc=multiply(multiply(kec,sqrt(abs(boundhandle[lattice[boundary[boundindices[i]],7:9],t]))),gradienthandle[lattice[boundary[boundindices[i]],7:9],t]) / sqrt(sum((gradienthandle[lattice[boundary[boundindices[i]],7:9],t]) ** 2,2))
            F[boundary[boundindices[i]],1]=F[boundary[boundindices[i]],1] + Fc[1,1]
            F[N + boundary[boundindices[i]],1]=F[N + boundary[boundindices[i]],1] + Fc[1,2]
            F[dot(2,N) + boundary[boundindices[i]],1]=F[dot(2,N) + boundary[boundindices[i]],1] + Fc[1,3]
        clear('boundindices')
        Fextcontact=sparse(cat([(arange(1,N)).T],[(arange(1,N)).T],[(arange(1,N)).T]),cat([ones(N,1)],[dot(2,ones(N,1))],[dot(3,ones(N,1))]),F,N,3)
    else:
        clear('boundindices')
        Fextcontact=sparse(cat([(arange(1,N)).T],[(arange(1,N)).T],[(arange(1,N)).T]),cat([ones(N,1)],[dot(2,ones(N,1))],[dot(3,ones(N,1))]),zeros(dot(3,N),1),N,3)
    
    return Fextcontact