# Autogenerated with SMOP 
from smop.core import *
# 

    
    ##
#        Project: Fluid - structure interaction on deformable surfaces
#         Author: Luca Di Stasio
#    Institution: ETH Zrich
#                 Institute for Building Materials
# Research group: Computational Physics for Engineering Materials
#        Version: 0.1
#  Creation date: July 7th, 2014
#    Last update: July 7th, 2014
    
    #    Description: 
#          Input: 
#         Output:
    
    ##
    
    clear('all')
    close_('all')
    clc
    r0=3
    #r = r0 + (0:0.01:15)';
    r=r0 + cat([(arange(2,5,0.01)).T],[(arange(5,2.5,- 0.01)).T],[(arange(2.5,6,0.01)).T],[(arange(6,3,- 0.01)).T],[(arange(3,9,0.01)).T],[(arange(9,0,- 0.01)).T],[(arange(0,11,0.01)).T],[(arange(11,8.5,- 0.01)).T],[(arange(8.5,15,0.01)).T],[(arange(15,0,- 0.01)).T],[(arange(0,20,0.01)).T])
    v=matlabarray(cat([r[2:end(),1] - r[1:end() - 1,1]],[1]))
    delta=r - r0
    deltadot=multiply(dot(2,v),(delta))
    F=zeros(length(delta),1)
    deltay=3
    deltacr=7
    deltad=12
    deltah=1
    Ke0=5
    Kp=1.5
    Ks=(dot(Ke0,deltay) + dot(Kp,(deltacr - deltay))) / (deltad - deltacr)
    Kheal=Ke0 / (deltad - deltah)
    delta0=0
    Ke=copy(Ke0)
    broken=0
    Kehist=matlabarray(cat(Ke0))
    figure
    grid('on')
    hold('on')
    xlabel('\\Delta [mm]')
    ylabel('F [N]')
    title('Elasto-plasticity with damage')
    for i in arange(1,length(delta)).reshape(-1):
        if logical_not(broken):
            if delta[i] >= delta0 and delta[i] < delta0 + deltay:
                F[i]=dot(Ke,(delta[i] - delta0))
                plot(delta[i],F[i],'*b','LineWidth',2)
                hold('on')
            else:
                if delta[i] >= delta0 + deltay and delta[i] < deltacr and deltadot[i] >= 0:
                    F[i]=dot(Ke0,deltay) + dot(Kp,(delta[i] - deltay))
                    plot(delta[i],F[i],'*r','LineWidth',2)
                    hold('on')
                else:
                    if delta[i] >= delta0 + deltay and delta[i] < deltacr and deltadot[i] < 0:
                        delta0=delta[i] - deltay
                        Ke=Ke0 + dot(Kp,(delta0 / deltay))
                        Kehist=matlabarray(cat([Kehist],[Ke]))
                        F[i]=dot(Ke,(delta[i] - delta0))
                        plot(delta[i],F[i],'or','LineWidth',2)
                        hold('on')
                    else:
                        if delta[i] >= deltacr and delta[i] < deltad and delta[i] - delta0 >= deltay and deltadot[i] >= 0:
                            F[i]=dot(Ke0,deltay) + dot(Kp,(deltacr - deltay)) - dot(Ks,(delta[i] - deltacr))
                            plot(delta[i],F[i],'*g','LineWidth',2)
                            hold('on')
                        else:
                            if delta[i] >= deltacr and delta[i] < deltad and deltadot[i] < 0:
                                delta0=delta[i] - deltay
                                Ke=Ke0 + dot(Kp,(deltacr / deltay - 1)) - dot(Ks,(delta0 / deltay - (deltacr / deltay - 1)))
                                Kehist=matlabarray(cat([Kehist],[Ke]))
                                F[i]=dot(Ke,(delta[i] - delta0))
                                plot(delta[i],F[i],'og','LineWidth',2)
                                hold('on')
                            else:
                                if delta[i] == deltad:
                                    delta0=0
                                    Ke=0
                                    Kehist=matlabarray(cat([Kehist],[Ke]))
                                    F[i]=0
                                    broken=1
                                    plot(delta[i],F[i],'*k','LineWidth',2)
                                    hold('on')
        else:
            if delta[i] > deltad:
                F[i]=0
                plot(delta[i],F[i],'*k','LineWidth',2)
                hold('on')
            else:
                if delta[i] <= deltad and delta[i] > deltah and deltadot[i] < 0:
                    Ke=dot(Kheal,(deltad - delta[i]))
                    Kehist=matlabarray(cat([Kehist],[Ke]))
                    F[i]=dot(dot(Ke0,(deltah - delta0)),(dot(Ke,(deltad - delta[i])) / (dot(Kheal,(deltad - deltah) ** 2))))
                    plot(delta[i],F[i],'*c','LineWidth',2)
                    hold('on')
                else:
                    if delta[i] == deltah and deltadot[i] < 0:
                        broken=0
                        Ke=copy(Ke0)
                        Kehist=matlabarray(cat([Kehist],[Ke]))
                        F[i]=dot(Ke,(delta[i] - delta0))
                        plot(delta[i],F[i],'*c','LineWidth',2)
                        hold('on')
    